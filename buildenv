export ZOPEN_CATEGORIES="library"
export ZOPEN_NAME="zusage"
export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build  --install-prefix \$ZOPEN_INSTALL_DIR/ -DBUILD_TESTING=ON -DENABLE_STATIC_INIT=ON -DCMAKE_INSTALL_PREFIX=\$ZOPEN_INSTALL_DIR/ -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ."
export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS=" --build ../build --parallel \$ZOPEN_NUM_JOBS --target all"
export ZOPEN_MAKE_MINIMAL="yes"
export ZOPEN_COMP=CLANG


export ZOPEN_BUILD_LINE="DEV"
export ZOPEN_DEV_URL="https://github.com/zopencommunity/zusage.git"
export ZOPEN_DEV_DEPS="make cmake git coreutils"
export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

export ZOPEN_RUNTIME_DEPS="zoslib" # depends on zoslib 

export ZOPEN_CHECK="cmake"
export ZOPEN_CHECK_OPTS="--build ../build --target check"
export ZOPEN_CHECK="skip"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  totalTests=$(egrep "^Total tests:" $chk | awk '{ print $3}') 
  failures=$(egrep "^Failed:" $chk | awk '{ print $2}')
  
# Echo the following information to guage build health
cat <<TEST
actualFailures:$failures
totalTests:$totalTests
expectedFailures:0
TEST
}

zopen_append_to_env()
{
cat <<ZZ
if [ -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
    return 0; # Do nothing
fi

export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} \$PWD/lib/zusage.c.o"

return 0
ZZ
}

zopen_get_version()
{
	echo "1.0.0"
}

